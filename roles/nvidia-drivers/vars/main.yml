---
# NVIDIA Driver and CUDA configuration for official network repository installation
# Following NVIDIA's official Debian network repository method

# NVIDIA CUDA keyring download URL (official method)
# This URL provides the latest keyring package that sets up the repository
nvidia_cuda_keyring_url: "https://developer.download.nvidia.com/compute/cuda/repos/debian12/x86_64/cuda-keyring_1.1-1_all.deb"

# Alternative keyring URLs for different Debian versions (if needed)
nvidia_cuda_keyring_urls:
  debian11: "https://developer.download.nvidia.com/compute/cuda/repos/debian11/x86_64/cuda-keyring_1.0-1_all.deb"
  debian12: "https://developer.download.nvidia.com/compute/cuda/repos/debian12/x86_64/cuda-keyring_1.1-1_all.deb"

# NVIDIA device nodes that need to be created for LXC passthrough
nvidia_device_nodes:
  - /dev/nvidia0
  - /dev/nvidia1
  - /dev/nvidia2
  - /dev/nvidia3
  - /dev/nvidiactl
  - /dev/nvidia-uvm
  - /dev/nvidia-uvm-tools
  - /dev/nvidia-modeset

# NVIDIA kernel modules to load
nvidia_modules:
  - nvidia
  - nvidia_uvm
  - nvidia_drm
  - nvidia_modeset

# LXC GPU passthrough device mappings
lxc_gpu_devices:
  - "c 195:* rwm"  # nvidia devices
  - "c 235:* rwm"  # nvidia-uvm devices
  - "c 509:* rwm"  # nvidia-modeset devices

# CUDA library paths for LXC containers
cuda_library_paths:
  - "/usr/local/cuda/lib64"
  - "/usr/lib/x86_64-linux-gnu"
  - "/usr/local/cuda/extras/CUPTI/lib64"

# Verification commands for testing NVIDIA installation
nvidia_verification_commands:
  - "nvidia-smi"
  - "nvcc --version"
  - "nvidia-smi -q -d compute"

# Package installation preferences
nvidia_packages:
  # Core CUDA toolkit (includes drivers)
  core:
    - cuda-toolkit
  
  # Optional utilities (may not be available in all repositories)
  optional:
    - nvidia-settings
    - nvidia-container-toolkit
    - nvidia-docker2

# Proxmox-specific kernel packages
proxmox_kernel_packages:
  - pve-headers
  - build-essential
  - dkms

# System requirements and dependencies
system_dependencies:
  - wget
  - gnupg
  - ca-certificates
  - software-properties-common

# LXC container configuration template
lxc_gpu_config_template: |
  # GPU Device Access
  lxc.cgroup2.devices.allow: c 195:* rwm
  lxc.cgroup2.devices.allow: c 235:* rwm
  lxc.cgroup2.devices.allow: c 509:* rwm
  
  # Device Mounts
  lxc.mount.entry: /dev/nvidia0 dev/nvidia0 none bind,optional,create=file
  lxc.mount.entry: /dev/nvidiactl dev/nvidiactl none bind,optional,create=file
  lxc.mount.entry: /dev/nvidia-uvm dev/nvidia-uvm none bind,optional,create=file
  lxc.mount.entry: /dev/nvidia-uvm-tools dev/nvidia-uvm-tools none bind,optional,create=file
  lxc.mount.entry: /dev/nvidia-modeset dev/nvidia-modeset none bind,optional,create=file
  
  # Features
  features: nesting=1

# Installation timeouts and retries
installation_config:
  download_timeout: 30
  download_retries: 3
  verification_retries: 5
  verification_delay: 10
  reboot_timeout: 600

# GPU optimization settings for different workloads
gpu_optimizations:
  # General settings
  persistence_mode: true
  
  # LXC-specific optimizations
  lxc:
    device_file_uid: 0
    device_file_gid: 0
    device_file_mode: "0666"
  
  # Performance settings
  performance:
    enable_mig: false  # Multi-Instance GPU (usually disabled for single workloads)
    power_limit: null  # Set to specific wattage if power limiting needed
    compute_mode: "Default"  # Default, Exclusive_Thread, Prohibited, Exclusive_Process

# Repository verification commands
repo_verification_commands:
  - "apt-cache policy | grep -i cuda"
  - "apt list --upgradable | grep -i cuda"
  - "apt-cache search cuda-toolkit"